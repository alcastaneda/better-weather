{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adriana/Documents/projects/BetterWeather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adriana/Documents/projects/BetterWeather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adriana/Documents/projects/BetterWeather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Results from\"./Results\";import regeneratorRuntime from\"regenerator-runtime/runtime\";import Autocomplete from\"react-google-autocomplete\";var SearchParams=function SearchParams(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),forecast=_useState2[0],setForecast=_useState2[1];function getData(_x){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:result=fetch(url,{method:\"GET\",mode:\"cors\",headers:{\"Access-Control-Allow-Origin\":\"*\",\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).then(function(data){// `data` is the parsed version of the JSON returned from the above endpoint.\nreturn data;});return _context.abrupt(\"return\",result);case 2:case\"end\":return _context.stop();}}},_callee);}));return _getData.apply(this,arguments);}function getWeather(_x2,_x3){return _getWeather.apply(this,arguments);}function _getWeather(){_getWeather=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(lat,lng){var metaweatherLocationSearch,location,weatherUrl,weather;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:metaweatherLocationSearch=\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\".concat(lat,\",\").concat(lng);_context2.next=3;return getData(metaweatherLocationSearch);case 3:location=_context2.sent;weatherUrl=\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\".concat(location[0].woeid,\"/\");_context2.next=7;return getData(weatherUrl);case 7:weather=_context2.sent;setForecast(weather.consolidated_weather||[]);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return _getWeather.apply(this,arguments);}return React.createElement(\"div\",{className:\"search-params\"},React.createElement(Autocomplete,{style:{width:\"90%\"},onPlaceSelected:function onPlaceSelected(place){console.log(place);var lat=place.geometry.location.lat();var lng=place.geometry.location.lng();getWeather(lat,lng);},types:[\"(cities)\"]}),React.createElement(Results,{forecast:forecast}));};export default SearchParams;","map":{"version":3,"sources":["/Users/adriana/Documents/projects/BetterWeather/src/SearchParams.js"],"names":["React","useState","useEffect","Results","regeneratorRuntime","Autocomplete","SearchParams","forecast","setForecast","getData","url","result","fetch","method","mode","headers","then","response","json","data","getWeather","lat","lng","metaweatherLocationSearch","location","weatherUrl","woeid","weather","consolidated_weather","width","place","console","log","geometry"],"mappings":"+eAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6BAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACOL,QAAQ,CAAC,EAAD,CADf,wCAClBM,QADkB,eACRC,WADQ,uBAGVC,CAAAA,OAHU,iIAGzB,iBAAuBC,GAAvB,6HACQC,MADR,CACiBC,KAAK,CAACF,GAAD,CAAM,CACxBG,MAAM,CAAE,KADgB,CAExBC,IAAI,CAAE,MAFkB,CAGxBC,OAAO,CAAE,CACP,8BAA+B,GADxB,CAEP,eAAgB,kBAFT,CAHe,CAAN,CAAL,CAQZC,IARY,CAQP,SAASC,QAAT,CAAmB,CACvB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVY,EAWZF,IAXY,CAWP,SAASG,IAAT,CAAe,CACnB;AACA,MAAOA,CAAAA,IAAP,CACD,CAdY,CADjB,iCAgBSR,MAhBT,wDAHyB,kDAsBVS,CAAAA,UAtBU,+IAsBzB,kBAA0BC,GAA1B,CAA+BC,GAA/B,gLACQC,yBADR,yGACqIF,GADrI,aAC4IC,GAD5I,yBAEyBb,CAAAA,OAAO,CAACc,yBAAD,CAFhC,QAEQC,QAFR,gBAGQC,UAHR,wFAGqGD,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAHjH,6BAIwBjB,CAAAA,OAAO,CAACgB,UAAD,CAJ/B,QAIQE,OAJR,gBAKEnB,WAAW,CAACmB,OAAO,CAACC,oBAAR,EAAgC,EAAjC,CAAX,CALF,wDAtByB,6CA8BzB,MACE,4BAAK,SAAS,CAAC,eAAf,EACE,oBAAC,YAAD,EACE,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CADT,CAEE,eAAe,CAAE,yBAAAC,KAAK,CAAI,CACxBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAMT,CAAAA,GAAG,CAAGS,KAAK,CAACG,QAAN,CAAeT,QAAf,CAAwBH,GAAxB,EAAZ,CACA,GAAMC,CAAAA,GAAG,CAAGQ,KAAK,CAACG,QAAN,CAAeT,QAAf,CAAwBF,GAAxB,EAAZ,CACAF,UAAU,CAACC,GAAD,CAAMC,GAAN,CAAV,CACD,CAPH,CAQE,KAAK,CAAE,CAAC,UAAD,CART,EADF,CAWE,oBAAC,OAAD,EAAS,QAAQ,CAAEf,QAAnB,EAXF,CADF,CAeD,CA7CD,CA+CA,cAAeD,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Results from \"./Results\";\nimport regeneratorRuntime from \"regenerator-runtime/runtime\";\nimport Autocomplete from \"react-google-autocomplete\";\n\nconst SearchParams = () => {\n  const [forecast, setForecast] = useState([]);\n\n  async function getData(url) {\n    const result = fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(data) {\n        // `data` is the parsed version of the JSON returned from the above endpoint.\n        return data;\n      });\n    return result;\n  }\n\n  async function getWeather(lat, lng) {\n    const metaweatherLocationSearch = `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=${lat},${lng}`;\n    const location = await getData(metaweatherLocationSearch);\n    const weatherUrl = `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${location[0].woeid}/`;\n    const weather = await getData(weatherUrl);\n    setForecast(weather.consolidated_weather || []);\n  }\n\n  return (\n    <div className=\"search-params\">\n      <Autocomplete\n        style={{ width: \"90%\" }}\n        onPlaceSelected={place => {\n          console.log(place);\n          const lat = place.geometry.location.lat();\n          const lng = place.geometry.location.lng();\n          getWeather(lat, lng);\n        }}\n        types={[\"(cities)\"]}\n      />\n      <Results forecast={forecast} />\n    </div>\n  );\n};\n\nexport default SearchParams;\n"]},"metadata":{},"sourceType":"module"}